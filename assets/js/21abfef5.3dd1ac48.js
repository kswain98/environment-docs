"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9],{7131:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var n=s(4848),r=s(8453);const o={sidebar_position:5},a="Goal State",i={id:"tutorial-extras/goal_state",title:"Goal State",description:"Define and track goals for agents to accomplish in your virtual environments.",source:"@site/docs/tutorial-extras/goal_state.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/goal_state",permalink:"/environment-docs/docs/tutorial-extras/goal_state",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-extras/goal_state.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Environment Capture",permalink:"/environment-docs/docs/tutorial-extras/environment_capture"},next:{title:"Contributors",permalink:"/environment-docs/docs/contributors"}},l={},d=[{value:"What are Goal States?",id:"what-are-goal-states",level:2},{value:"Goal Types",id:"goal-types",level:2},{value:"Relation Goals",id:"relation-goals",level:3},{value:"State Goals",id:"state-goals",level:3},{value:"Allowed Relations",id:"allowed-relations",level:2},{value:"Allowed States",id:"allowed-states",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"goal-state",children:"Goal State"})}),"\n",(0,n.jsx)(t.p,{children:"Define and track goals for agents to accomplish in your virtual environments."}),"\n",(0,n.jsx)(t.h2,{id:"what-are-goal-states",children:"What are Goal States?"}),"\n",(0,n.jsx)(t.p,{children:"Goal states define what you want agents to achieve. They specify relationships between objects or states of objects that agents should create or maintain."}),"\n",(0,n.jsx)(t.h2,{id:"goal-types",children:"Goal Types"}),"\n",(0,n.jsx)(t.h3,{id:"relation-goals",children:"Relation Goals"}),"\n",(0,n.jsx)(t.p,{children:"Define spatial relationships between objects:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"goals = {\n    ('keycard', 'on', 'card_reader'): 1,\n    ('milk', 'inside', 'refrigerator'): 2,\n    ('book', 'on', 'table'): 1\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Format: ",(0,n.jsx)(t.code,{children:"(subject, relation, target): count"})]}),"\n",(0,n.jsx)(t.h3,{id:"state-goals",children:"State Goals"}),"\n",(0,n.jsx)(t.p,{children:"Define object states:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"goals = {\n    ('door', 'state', 'open'): 1,\n    ('refrigerator', 'state', 'closed'): 1,\n    ('light', 'state', 'switchon'): 1\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Format: ",(0,n.jsx)(t.code,{children:"(object, 'state', state_type): count"})]}),"\n",(0,n.jsx)(t.h2,{id:"allowed-relations",children:"Allowed Relations"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Relation"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Example"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"'on'"})}),(0,n.jsx)(t.td,{children:"Object placed on surface"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"('cup', 'on', 'table')"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"'inside'"})}),(0,n.jsx)(t.td,{children:"Object placed inside container"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"('key', 'inside', 'drawer')"})})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"allowed-states",children:"Allowed States"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"State"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Example"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"'open'"})}),(0,n.jsx)(t.td,{children:"Container or door is open"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"('door', 'state', 'open')"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"'closed'"})}),(0,n.jsx)(t.td,{children:"Container or door is closed"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"('box', 'state', 'closed')"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"'switchon'"})}),(0,n.jsx)(t.td,{children:"Device is turned on"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"('light', 'state', 'switchon')"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"'switchoff'"})}),(0,n.jsx)(t.td,{children:"Device is turned off"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"('tv', 'state', 'switchoff')"})})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>i});var n=s(6540);const r={},o=n.createContext(r);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);